{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlshu\\\\Documents\\\\GitHub\\\\psyhology-site\\\\frontend\\\\src\\\\Pages\\\\AdminPage\\\\AdminPage.js\";\nimport React, { Component } from 'react';\nimport './AdminPage.css';\nimport AddGroupAdmin from './AddGroupAdmin';\nimport GroupAdminPage from './GroupAdminPage';\nimport { Form, Container, Button, ResponsiveEmbed } from 'react-bootstrap';\nimport axios from 'axios';\nexport default class AdminPage extends Component {\n  constructor() {\n    super();\n\n    this.adminChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const endpoint = \"https://cors-anywhere.herokuapp.com/https://psyhology-site.herokuapp.com/admin/login\";\n      const username = this.state.username;\n      const password = this.state.password;\n      const headers = {\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      };\n      const user_object = {\n        username: username,\n        password: password\n      };\n      axios.post(endpoint, headers, user_object).then(res => {\n        localStorage.clear();\n\n        if (res.data != null) {\n          localStorage.setItem(\"authorization\", res.data.token);\n          console.log(localStorage.getItem(\"authorization\"));\n          alert(\"Authentication great\");\n        } //   return this.handleDashboard();\n\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.adminChange = this.adminChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"\\u0421\\u0442\\u043E\\u0440\\u0456\\u043D\\u043A\\u0430 \\u0430\\u0434\\u043C\\u0456\\u043D\\u0456\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"\\u044F\\u043A\\u0449\\u043E \\u0432\\u0438 \\u043F\\u043E\\u043F\\u0430\\u043B\\u0438 \\u0441\\u044E\\u0434\\u0438 \\u0432\\u0438\\u043F\\u0430\\u0434\\u043A\\u043E\\u0432\\u043E \\u043D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0456\\u0442\\u044C\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleFormSubmit,\n      className: \"admin-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controllId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      className: \"username-input\",\n      type: \"text\",\n      placeholder: \"username\",\n      onChange: this.adminChange,\n      name: \"username\",\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controllId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      className: \"password-input\",\n      type: \"text\",\n      placeholder: \"password\",\n      onChange: this.adminChange,\n      name: \"password\",\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"submit-btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"))), /*#__PURE__*/React.createElement(AddGroupAdmin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(GroupAdminPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlshu/Documents/GitHub/psyhology-site/frontend/src/Pages/AdminPage/AdminPage.js"],"names":["React","Component","AddGroupAdmin","GroupAdminPage","Form","Container","Button","ResponsiveEmbed","axios","AdminPage","constructor","adminChange","event","setState","target","name","value","handleFormSubmit","preventDefault","endpoint","username","state","password","headers","user_object","post","then","res","localStorage","clear","data","setItem","token","console","log","getItem","alert","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './AdminPage.css'\r\nimport AddGroupAdmin from './AddGroupAdmin';\r\nimport GroupAdminPage from './GroupAdminPage'\r\nimport { Form, Container, Button, ResponsiveEmbed } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nexport default class AdminPage extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          username: '',\r\n          password: ''\r\n        };\r\n        this.adminChange = this.adminChange.bind(this);\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n      }\r\n      adminChange = event => {\r\n        this.setState({[event.target.name]:event.target.value});\r\n    }\r\n   \r\n      handleFormSubmit = event => {\r\n        event.preventDefault();\r\n    \r\n        const endpoint = \"https://cors-anywhere.herokuapp.com/https://psyhology-site.herokuapp.com/admin/login\";\r\n    \r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        const headers = {\r\n          headers :{'X-Requested-With': 'XMLHttpRequest'}\r\n        }\r\n        const user_object = {\r\n          username: username,\r\n          password: password\r\n        };\r\n    \r\n        axios.post(endpoint,headers, user_object).then(res => {\r\n          localStorage.clear();\r\n          if(res.data!=null){\r\n          localStorage.setItem(\"authorization\", res.data.token);\r\n         console.log(localStorage.getItem(\"authorization\"));\r\n            alert(\"Authentication great\");\r\n          }\r\n        //   return this.handleDashboard();\r\n        });\r\n      };\r\n\r\n      \r\n\r\n    render() {\r\n      const {username,password} = this.state;\r\n        return (\r\n           <div>\r\n               <div className=\"admin-title\">\r\n            <h1>Сторінка адміністратора</h1>\r\n            <p>якщо ви попали сюди випадково натисніть</p>    \r\n            </div>\r\n            <Container>\r\n                    <Form onSubmit={this.handleFormSubmit} className=\"admin-input\">\r\n                    <Form.Group controllId=\"formBasicName\">\r\n                          <Form.Control \r\n                          required\r\n                          className=\"username-input\" type=\"text\" \r\n                          placeholder=\"username\"\r\n                          onChange={this.adminChange}\r\n                          name = \"username\"\r\n                         value={username}\r\n                           />\r\n                      </Form.Group>\r\n                      <Form.Group controllId=\"formBasicName\">                          \r\n                          <Form.Control \r\n                          required\r\n                          className=\"password-input\" type=\"text\" \r\n                          placeholder=\"password\"\r\n                          onChange={this.adminChange}\r\n                          name = \"password\"\r\n                          value={password}\r\n                           />\r\n                      </Form.Group>\r\n                      <Button className=\"submit-btn\" type=\"submit\">\r\n                            Авторизуватися\r\n                        </Button>\r\n                    </Form>\r\n                   \r\n                        \r\n                   \r\n                </Container>\r\n               <AddGroupAdmin/>\r\n               <GroupAdminPage/>\r\n              \r\n           </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}