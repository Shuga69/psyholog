{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlshu\\\\Documents\\\\GitHub\\\\psyhology-site\\\\frontend\\\\src\\\\Pages\\\\AdminPage\\\\upload-files.component.js\";\nimport React, { Component } from \"react\";\nimport UploadService from \"./upload-files.service\";\nexport default class UploadFiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFiles: '',\n      currentFile: '',\n      progress: 0,\n      message: \"\",\n      path: '',\n      fileInfos: []\n    };\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total),\n        path: currentFile.name\n      });\n      localStorage.setItem(\"FileName\", this.state.path); // console.log(\"path:\"+this.state.path+\"fileName\"+localStorage.getItem(\"FileName\"));\n    }).then(response => {\n      this.setState({\n        message: response.data.message\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos,\n      path\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, currentFile && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-info progress-bar-striped\",\n      role: \"progressbar\",\n      \"aria-valuenow\": progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: progress + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, progress, \"%\")), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.selectFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      disabled: !selectedFiles,\n      onClick: this.upload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-light\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"List of Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, fileInfos && fileInfos.map((file, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: file.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, file.name))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlshu/Documents/GitHub/psyhology-site/frontend/src/Pages/AdminPage/upload-files.component.js"],"names":["React","Component","UploadService","UploadFiles","constructor","props","state","selectedFiles","currentFile","progress","message","path","fileInfos","selectFile","bind","upload","event","setState","target","files","componentDidMount","getFiles","then","response","data","Math","round","loaded","total","name","localStorage","setItem","catch","undefined","render","width","map","file","index","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UploadService from \"./upload-files.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        selectedFiles: '',\r\n        currentFile: '',\r\n        progress: 0,\r\n        message: \"\",\r\n        path:'',\r\n        fileInfos: [],\r\n      };\r\n      this.selectFile = this.selectFile.bind(this);\r\n      this.upload = this.upload.bind(this);\r\n      \r\n  }\r\n  \r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n \r\n  componentDidMount(){\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n}\r\n    upload () {\r\n        let currentFile = this.state.selectedFiles[0];\r\n       \r\n        this.setState({\r\n          progress: 0,\r\n          currentFile: currentFile,\r\n        });\r\n        \r\n        \r\n        UploadService.upload(currentFile, (event) => {\r\n          \r\n          \r\n          this.setState({\r\n            progress: Math.round((100 * event.loaded) / event.total),\r\n            path: currentFile.name,\r\n            \r\n          });\r\n          localStorage.setItem(\"FileName\",this.state.path);\r\n          // console.log(\"path:\"+this.state.path+\"fileName\"+localStorage.getItem(\"FileName\"));\r\n        })\r\n          .then((response) => {\r\n           \r\n            this.setState({\r\n              message: response.data.message,\r\n              \r\n            });\r\n            return UploadService.getFiles();\r\n          })\r\n          \r\n          .then((files) => {\r\n            this.setState({\r\n              fileInfos: files.data,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              progress: 0,\r\n              message: \"Could not upload the file!\",\r\n              currentFile: undefined,\r\n            });\r\n            \r\n          });\r\n         \r\n        this.setState({\r\n          selectedFiles: undefined,\r\n        });\r\n    } \r\n  render () {\r\n    const {\r\n        selectedFiles,\r\n        currentFile,\r\n        progress,\r\n        message,\r\n        fileInfos,\r\n        path\r\n      } = this.state;\r\n  \r\n      return (\r\n        <div>\r\n          {currentFile && (\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                aria-valuenow={progress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                style={{ width: progress + \"%\" }}\r\n              >\r\n                {progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n  \r\n          <label className=\"btn btn-default\">\r\n            <input type=\"file\" onChange={this.selectFile} />\r\n          </label>\r\n  \r\n          <button className=\"btn btn-success\"\r\n            disabled={!selectedFiles}\r\n            onClick={this.upload}\r\n          >\r\n            Upload\r\n          </button>\r\n  \r\n          <div className=\"alert alert-light\" role=\"alert\">\r\n            {message}\r\n            \r\n          </div>\r\n  \r\n          <div className=\"card\">\r\n            <div className=\"card-header\">List of Files</div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {fileInfos &&\r\n                fileInfos.map((file, index) => (\r\n                  <li className=\"list-group-item\" key={index}>\r\n                    <a href={file.url}>{file.name}</a>\r\n                         \r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module"}